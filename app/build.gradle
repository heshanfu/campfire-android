apply plugin: "com.android.application"
apply plugin: "kotlin-android-extensions"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"
apply plugin: "io.fabric"

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.pandulapeter.campfire"
        minSdkVersion 22
        targetSdkVersion 28
        versionCode 13
        versionName "0.7.8"
        vectorDrawables.useSupportLibrary = true
    }
    dataBinding {
        enabled = true
    }
    signingConfigs {
        def keystoreProperties = new Properties()
        internal {
            keystoreProperties.load(new FileInputStream(rootProject.file("app/internal.keystore.properties")))
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
        release {
            keystoreProperties.load(new FileInputStream(rootProject.file("app/release.keystore.properties")))
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            versionNameSuffix "-debug"
        }
        internal {
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.internal
            versionNameSuffix "-internal"
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.release
        }
    }
    packagingOptions {
        exclude "META-INF/main.kotlin_module"
    }
}
repositories {
    mavenCentral()
    jcenter()
    maven {
        url "https://maven.google.com"
    }
}
kotlin {
    experimental {
        coroutines "enable"
    }
}
androidExtensions {
    experimental = true
}
dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:0.24.0"

    // Service locator
    def koinVersion = "1.0.1"
    implementation "org.koin:koin-android:$koinVersion"
    implementation "org.koin:koin-android-viewmodel:$koinVersion"

    // Networking
    def retrofitVersion = "2.3.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    // Persistence
    def roomVersion = "1.1.1"
    implementation "android.arch.persistence.room:runtime:$roomVersion"
    kapt "android.arch.persistence.room:compiler:$roomVersion"

    // Image loading
    def glideVersion = "4.8.0"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    // Process handling
    implementation "com.jakewharton:process-phoenix:2.0.0"

    // Firebase
    implementation "com.google.firebase:firebase-core:16.0.3"

    // Crash reporting
    implementation "com.crashlytics.sdk.android:crashlytics:2.9.5"

    // Support library
    //TODO: Replace with AndroidX.
    def supportLibraryVersion = "28.0.0"
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:support-v4:$supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$supportLibraryVersion"
    implementation "com.android.support:customtabs:$supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:1.1.3"
    implementation "android.arch.lifecycle:viewmodel:1.1.1"
}
apply plugin: "com.google.gms.google-services"